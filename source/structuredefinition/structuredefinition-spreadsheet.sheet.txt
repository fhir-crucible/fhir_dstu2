
=== Sheet Bindings =====================================

 -- Row 1 -----------------------------------
  Binding Name = StructureDefinitionKind
  Binding = code list
  Reference = #structure-definition-kind
  Definition = Defines the type of structure that a definition is describing
  Conformance = required

 -- Row 2 -----------------------------------
  Binding Name = ExtensionContext
  Binding = code list
  Reference = #extension-context
  Definition = How an extension context is interpreted
  Conformance = required

 -- Row 3 -----------------------------------
  Binding Name = StructureDefinitionCode
  Binding = value set
  Reference = valueset-profile-code
  Definition = Codes for the meaning of the defined structure (SNOMED CT and LOINC codes, as an example)
  Conformance = example

=== Sheet structure-definition-kind =====================================

 -- Row 1 -----------------------------------
  Id = 1
  Code = datatype
  Display = Data Type
  Definition = A data type - either a primitive or complex structure that defines a set of data elements. These can be used throughout Resource and extension definitions

 -- Row 2 -----------------------------------
  Id = 2
  Code = resource
  Display = Resource
  Definition = A resource defined by the FHIR specification

 -- Row 3 -----------------------------------
  Id = 3
  Code = logical
  Display = Logical Model
  Definition = A logical model - a conceptual package of data that will be mapped to resources for implementation

=== Sheet extension-context =====================================

 -- Row 1 -----------------------------------
  Id = 1
  Code = resource
  Display = Resource
  Definition = The context is all elements matching a particular resource element path

 -- Row 2 -----------------------------------
  Id = 2
  Code = datatype
  Display = Datatype
  Definition = The context is all nodes matching a particular data type element path (root or repeating element) or all elements referencing a particular primitive data type (expressed as the datatype name)

 -- Row 3 -----------------------------------
  Id = 3
  Code = mapping
  Display = Mapping
  Definition = The context is all nodes whose mapping to a specified reference model corresponds to a particular mapping structure.  The context identifies the mapping target. The mapping should clearly identify where such an extension could be used

 -- Row 4 -----------------------------------
  Id = 4
  Code = extension
  Display = Extension
  Definition = The context is a particular extension from a particular profile, a uri that identifies the extension definition

=== Sheet Invariants =====================================

 -- Row 1 -----------------------------------
  Id = 1
  Context = StructureDefinition.snapshot
  English = Element paths must be unique - or not (LM)
  XPath = count(f:element) >= count(distinct-values(f:element/f:path/@value))

 -- Row 2 -----------------------------------
  Id = 2
  Context = StructureDefinition.mapping
  English = Must have at a name or a uri (or both)
  XPath = exists(f:uri) or exists(f:name)

 -- Row 3 -----------------------------------
  Id = 3
  Context = StructureDefinition.snapshot
  English = If a structure is a snapshot, then each element definition must have a formal definition, and cardinalities
  XPath = exists(f:base) or (count(f:element) = count(f:element[exists(f:definition) and exists(f:min) and exists(f:max)]))

 -- Row 4 -----------------------------------
  Id = 4
  Context = StructureDefinition
  English = A structure must have a base unless abstract = true
  XPath = (f:abstract/@value = \'true\') or exists(f:base)

 -- Row 5 -----------------------------------
  Id = 5
  Context = StructureDefinition
  English = If the structure defines an extension then the structure must have context information
  XPath = not(f:constrainedType/@value = \'extension\') or (exists(f:context) and exists(f:contextType))

 -- Row 6 -----------------------------------
  Id = 6
  Context = StructureDefinition
  English = A structure must have either a differential, or a snapshot (or both)
  XPath = exists(f:snapshot) or exists(f:differential)

 -- Row 7 -----------------------------------
  Id = 7
  Context = StructureDefinition
  English = If the structure describes a base Resource or Type, the url has to start with \"http://hl7.org/fhir/StructureDefinition/\" and the tail must match the name
  XPath = not(exists(constrainedType)) or f:url/@value=concat(\'http://hl7.org/fhir/StructureDefinition/\', f:name/@value)

 -- Row 8 -----------------------------------
  Id = 8
  Context = StructureDefinition
  English = In any snapshot or differential, all the elements except the first have to have a path that starts with the path of the first + \".\"
  XPath = string-join(for $elementName in f:*[self::f:snapshot or self::f:differential]/f:element[position()>1]/f:path/@value return if (starts-with($elementName, concat($elementName/ancestor::f:element/parent::f:*/f:element[1]/f:path/@value, \'.\'))) then \'\' else $elementName,\'\')=\'\'

 -- Row 9 -----------------------------------
  Id = 9
  Requirements = Because these 3 fields seem to be have overlapping meaning with the ones in the root of StructureDefinition
  Context = StructureDefinition
  English = In any snapshot or differential, no label, code or requirements on the an element without a \".\" in the path (e.g. the first element)
  XPath = not(exists(f:snapshot/f:element[not(contains(f:path/@value, \'.\')) and (f:label or f:code or f:requirements)])) and not(exists(f:differential/f:element[not(contains(f:path/@value, \'.\')) and (f:label or f:code or f:requirements)]))

 -- Row 10 -----------------------------------
  Id = 10
  Requirements = Ensure that there\'s a base unless the type is abstract and there\'s no constrainedType
  Context = StructureDefinition
  English = If the structure is not abstract, or there\'s a constrained type, then there SHALL be a base
  XPath = (f:abstract/@value=\'true\') or not(exists(f:constrainedType)) or exists(f:base)

 -- Row 11 -----------------------------------
  Id = 11
  Requirements = Ensure that the constrainedType is not inconsistent with the other information in the structure
  Context = StructureDefinition
  English = If there\'s a constrained type, its content must match the path name in the first element of a snapshot
  XPath = not(exists(f:constrainedType)) or not(exists(f:snapshot)) or (f:constrainedType/@value = f:snapshot/f:element[1]/f:path/@value)

 -- Row 12 -----------------------------------
  Id = 12
  Requirements = Ensure that element.base appears with base or not
  Context = StructureDefinition
  English = element.base cannot appear if theres\'s no base on the structure definition
  XPath = f:base or not(exists(f:snapshot/f:element/f:base) or exists(f:differential/f:element/f:base))

 -- Row 13 -----------------------------------
  Id = 13
  Requirements = Ensure that element.base appears if there\'s a constrained type on the structure definition
  Context = StructureDefinition
  English = element.base must appear if theres\'s a base on the structure definition
  XPath = not(f:constrainedType) or not(f:snapshot/f:element[not(f:base)])

=== Sheet Data Elements =====================================

 -- Row 1 -----------------------------------
  Element = StructureDefinition
  Card. = 1..1
  Aliases = Template, Profile
  UML = 0;0
  Type = DomainResource
  Short Label = Structural Definition
  Definition = A definition of a FHIR structure. This resource is used to describe the underlying resources, data types defined in FHIR, and also for describing extensions, and constraints on resources and data types
  RIM Mapping = n/a
  w5 = conformance.content

 -- Row 2 -----------------------------------
  Element = StructureDefinition.url
  gForge = 3265
  Card. = 1..1
  Aliases = url, authoritative-url, destination, identity
  Summary = Y
  Type = uri
  Short Label = Literal URL used to reference this StructureDefinition
  Definition = An absolute URL that is used to identify this structure definition when it is referenced in a specification, model, design or an instance. This SHALL be a URL, SHOULD be globally unique, and SHOULD be an address at which this structure definition is (or will be) published
  Requirements = So you can say, in a StructureDefinition, what the full extension URLs should be. This is required to allow hosting StructureDefinitions on multiple different servers, and to allow for the editorial process
  w5 = id

 -- Row 3 -----------------------------------
  Element = StructureDefinition.identifier
  Card. = 0..*
  Summary = y
  Type = Identifier
  Short Label = Other identifiers for the StructureDefinition
  Definition = Formal identifier that is used to identify this StructureDefinition when it is represented in other formats, or referenced in a specification, model, design or an instance  (should be globally unique OID, UUID, or URI), (if it\'s not possible to use the literal URI)
  11179 Mapping = Identifier part
  w5 = id

 -- Row 4 -----------------------------------
  Element = StructureDefinition.version
  Card. = 0..1
  Summary = y
  Type = string
  Short Label = Logical id for this version of the StructureDefinition
  Definition = The identifier that is used to identify this version of the StructureDefinition when it is referenced in a specification, model, design or instance. This is an arbitrary value managed by the StructureDefinition author manually
  Requirements = There may be multiple resource versions of the StructureDefinition that have this same identifier. The resource version id will change for technical reasons, whereas the stated version number needs to be under the author\'s control
  11179 Mapping = Version
  w5 = id.version

 -- Row 5 -----------------------------------
  Element = StructureDefinition.name
  Card. = 1..1
  Summary = y
  Type = string
  Short Label = Informal name for this StructureDefinition
  Definition = A free text natural language name identifying the StructureDefinition
  Comments = Not expected to be globally unique

 -- Row 6 -----------------------------------
  Element = StructureDefinition.display
  Card. = 0..1
  Summary = Y
  Type = string
  Short Label = Use this name when displaying the value
  Definition = Defined so that applications can use this name when displaying the value of the extension to the user
  Comments = Applications don\'t have to use this name, but can always fall back to it. In the absence of a value for this element, use the name

 -- Row 7 -----------------------------------
  Element = StructureDefinition.status
  Card. = 1..1
  Is Modifier = yes
  Summary = y
  Type = code
  Binding = ConformanceResourceStatus
  Short Label = draft | active | retired
  Definition = The status of the StructureDefinition
  Requirements = Allows filtering of StructureDefinitions that are appropriate for use vs. not
  11179 Mapping = Registration status
  w5 = status

 -- Row 8 -----------------------------------
  Element = StructureDefinition.experimental
  Card. = 0..1
  Summary = y
  Type = boolean
  Short Label = If for testing purposes, not real usage
  Definition = This StructureDefinition was authored for testing purposes (or education/evaluation/marketing), and is not intended to be used for genuine usage
  Requirements = Allows filtering of StructureDefinitions that are appropriate for use vs. not
  11179 Mapping = Registration status
  w5 = class

 -- Row 9 -----------------------------------
  Element = StructureDefinition.publisher
  Card. = 0..1
  Summary = y
  Type = string
  Short Label = Name of the publisher (Organization or individual)
  Definition = The name of the individual or organization that published the structure definition
  Requirements = Helps establish the \"authority/credibility\" of the structure definition.  May also allow for contact
  Comments = Usually an organization, but may be an individual. This item SHOULD be populated unless the information is available from context.
  11179 Mapping = Registration Authority
  w5 = who.witness

 -- Row 10 -----------------------------------
  Element = StructureDefinition.contact
  Card. = 0..*
  Summary = y
  UML = 400;0
  Short Label = Contact details of the publisher
  Definition = Contacts to assist a user in finding and communicating with the publisher
  Comments = May be a web site, an email address, a telephone number (tel:), etc.

 -- Row 11 -----------------------------------
  Element = StructureDefinition.contact.name
  Card. = 0..1
  Summary = Y
  Type = string
  Short Label = Name of a individual to contact
  Definition = The name of an individual to contact regarding the structure definition
  Comments = If there is no named individual, the telecom is for the organization as a whole

 -- Row 12 -----------------------------------
  Element = StructureDefinition.contact.telecom
  Card. = 0..*
  Summary = Y
  Type = ContactPoint
  Short Label = Contact details for individual or publisher
  Definition = Contact details for individual (if a name was provided) or the publisher

 -- Row 13 -----------------------------------
  Element = StructureDefinition.date
  Card. = 0..1
  Summary = y
  Type = dateTime
  Short Label = Date for this version of the StructureDefinition
  Definition = The date that this version of the StructureDefinition was published. The date must change when the business version changes, if it does, and it must change if the status code changes. in addition, it should change when the substantiative content of the structure definition changes
  Comments = Additional specific dates may be added as extensions
  w5 = when.recorded

 -- Row 14 -----------------------------------
  Element = StructureDefinition.description
  Card. = 0..1
  Summary = y
  Type = string
  Short Label = Natural language description of the StructureDefinition
  Definition = A free text natural language description of the StructureDefinition and its use
  Comments = This field can be used for things such as why the StructureDefinition was written, comments about misuse, instructions for clinical use and interpretation, literature references, examples from the paper world, etc.  It is *not* a rendering of the StructureDefinition as conveyed in StructureDefinition.text. This item SHOULD be populated unless the information is available from context

 -- Row 15 -----------------------------------
  Element = StructureDefinition.useContext
  Card. = 0..*
  Summary = y
  Type = CodeableConcept
  Binding = ConformanceUseContext
  Short Label = Content intends to support these contexts
  Definition = The content was developed with a focus and intent of supporting the contexts that are listed. These terms may be used to assist with indexing and searching of structure definitions.
  Requirements = Assist in searching for appropriate content
  11179 Mapping = COMPONENT, PROPERTY, TIME_ASPCT, SYSTEM, SCALE_TYP, METHOD_TYP, CLASS, CLASSTYPE, ORDER_OBS, DOCUMENT_SECTION, HL7_ATTACHMENT_STRUCTURE

 -- Row 16 -----------------------------------
  Element = StructureDefinition.requirements
  Card. = 0..1
  Type = string
  Short Label = Scope and Usage this structure definition is for
  Definition = Explains why this structure definition is needed and why it\'s been constrained as it has
  Comments = This element does not describe the usage of the structure definition (that\'s done in comments), rather it\'s for traceability of *why* the element is either needed or why the constraints exist as they do.  This may be used to point to source materials or specifications that drove the structure of this data element
  w5 = why

 -- Row 17 -----------------------------------
  Element = StructureDefinition.copyright
  Card. = 0..1
  Aliases = License,Restrictions
  Type = string
  Short Label = Use and/or Publishing restrictions
  Definition = A copyright statement relating to the structure definition and/or its contents. Copyright statements are generally legal restrictions on the use and publishing of the details of the constraints and mappings

 -- Row 18 -----------------------------------
  Element = StructureDefinition.code
  Card. = 0..*
  Summary = y
  Type = Coding
  Binding = StructureDefinitionCode
  Short Label = Assist with indexing and finding
  Definition = A set of terms from external terminologies that may be used to assist with indexing and searching of templates.
  Requirements = Assist in searching for appropriate StructureDefinitions
  11179 Mapping = keywords

 -- Row 19 -----------------------------------
  Element = StructureDefinition.fhirVersion
  Card. = 0..1
  Summary = y
  Type = id
  Short Label = FHIR Version this StructureDefinition targets
  Definition = The version of the FHIR specification on which this StructureDefinition is based - this is the formal version of the specification, without the revision number, e.g. [publication].[major].[minor], which is $version$ for this version
  Comments = A StructureDefinition does not need to specify the target it applies to,as StructureDefinitions will often be valid across multiple versions of FHIR. FHIR tooling can determine whether a StructureDefinition is consistent with a particular StructureDefinition if desired

 -- Row 20 -----------------------------------
  Element = StructureDefinition.mapping
  Card. = 0..*
  UML = 410;80
  Short Label = External specification that the content is mapped to
  Definition = An external specification that the content is mapped to

 -- Row 21 -----------------------------------
  Element = StructureDefinition.mapping.identity
  Card. = 1..1
  Type = id
  Short Label = Internal id when this mapping is used
  Definition = An Internal id that is used to identify this mapping set when specific mappings are made
  Comments = The specification is described once, with general comments, and then specific mappings are made that reference this declaration

 -- Row 22 -----------------------------------
  Element = StructureDefinition.mapping.uri
  Card. = 0..1
  Inv. = 2
  Type = uri
  Short Label = Identifies what this mapping refers to
  Definition = An absolute URI that identifies the specification that this mapping is expressed to
  Comments = A formal identity for the specification being mapped to helps with identifying maps consistently

 -- Row 23 -----------------------------------
  Element = StructureDefinition.mapping.name
  Card. = 0..1
  Inv. = 2
  Type = string
  Short Label = Names what this mapping refers to
  Definition = A name for the specification that is being mapped to

 -- Row 24 -----------------------------------
  Element = StructureDefinition.mapping.comments
  Card. = 0..1
  Type = string
  Short Label = Versions, Issues, Scope limitations etc
  Definition = Comments about this mapping, including version notes, issues, scope limitations, and other important notes for usage

 -- Row 25 -----------------------------------
  Element = StructureDefinition.kind
  Card. = 1..1
  Summary = Y
  Type = code
  Binding = StructureDefinitionKind
  Short Label = datatype | resource | logical
  Definition = Defines the kind of structure that this definition is describing

 -- Row 26 -----------------------------------
  Element = StructureDefinition.constrainedType
  Card. = 0..1
  Summary = Y
  Inv. = 10,11
  Type = code
  Binding = FHIRDefinedType
  Short Label = Any datatype or resource, including abstract ones
  Definition = The type of type that is being constrained - a data type, an extension, a resource, including abstract ones. If this field is present, it indicates that the structure definition is a constraint. If it is not present, then the structure definition is the definition of a base structure
  Comments = if a constrained type is present, then there SHALL be a base resource as well. Note that the constrained type could be determined by chasing through the base references until the base definition is reached, or by looking at the path of the first element in the snapshot - if present - but providing the constrainedType directly makes for simpler tooling and indexing

 -- Row 27 -----------------------------------
  Element = StructureDefinition.abstract
  Card. = 1..1
  Summary = Y
  Type = boolean
  Short Label = Whether the structure is abstract
  Definition = Whether structure this definition describes is abstract or not  - that is, whether an actual exchanged item can ever be of this type
  Comments = Abstract Resources cannot be instantiated - a concrete sub-type must be used. Abstract datatypes and extensions cannot be used in an instance. Flagging a constraint structure as abstract conveys design intent but makes no difference to how the structure definition is handled. Note that inline declared elements that are given the type \"Element\" in the profile, but have children described, are anonymous concrete types that specialise Element. Abstract is not relevant for logical models

 -- Row 28 -----------------------------------
  Element = StructureDefinition.contextType
  Card. = 0..1
  Summary = Y
  Inv. = 5
  Type = code
  Binding = ExtensionContext
  Short Label = resource | datatype | mapping | extension
  Definition = If this is an extension, Identifies the context within FHIR resources where the extension can be used

 -- Row 29 -----------------------------------
  Element = StructureDefinition.context
  Card. = 0..*
  Summary = Y
  Inv. = 5
  Type = string
  Short Label = Where the extension can be used in instances
  Definition = Identifies the types of resource or data type elements to which the extension can be applied
  Comments = If the context is an element that can have multiple types, then use (e.g.) value[x] if the extension works on all choice types, or otherwise an enumeration of explicitly named elements if not. Note that a context of \"string\" doesn\'t mean that the extension can be used with one of the string patterns such as \"id\" etc

 -- Row 30 -----------------------------------
  Element = StructureDefinition.base
  Card. = 0..1
  Summary = Y
  Inv. = 4,10
  Type = uri
  Short Label = Structure that this set of constraints applies to
  Definition = An absolute URI that is the base structure from which this set of constraints is derived
  Comments = If differential constraints are specified in this structure, they are applied to the base in a \"differential\" fashion. If there is no base, then the differential constraints cannot be provided (snapshot only). Differential structures are useful for the editing perspective, and snapshot structures are suitable for operational use. The FHIR Project provides a number of tools/services to populate snaphots from differential constraints. Logical Models have a base of \"Element\" or another logical model

 -- Row 31 -----------------------------------
  Element = StructureDefinition.snapshot
  Card. = 0..1
  UML = 400;190
  Inv. = 6
  Short Label = Snapshot view of the structure
  Definition = A snapshot view is expressed in a stand alone form that can be used and interpreted without considering the base StructureDefinition

 -- Row 32 -----------------------------------
  Element = StructureDefinition.snapshot.element
  Card. = 1..*
  Inv. = 3
  Type = ElementDefinition
  Short Label = Definition of elements in the resource (if no StructureDefinition)
  Definition = Captures constraints on each element within the resource
  11179 Mapping = --

 -- Row 33 -----------------------------------
  Element = StructureDefinition.differential
  Card. = 0..1
  UML = 400;270
  Inv. = 6
  Short Label = Differential view of the structure
  Definition = A differential view is expressed relative to the base StructureDefinition - a statement of differences that it applies

 -- Row 34 -----------------------------------
  Element = StructureDefinition.differential.element
  Card. = 1..*
  Type = ElementDefinition
  Short Label = Definition of elements in the resource (if no StructureDefinition)
  Definition = Captures constraints on each element within the resource
  11179 Mapping = --

 -- Row 35 -----------------------------------
  Element = !StructureDefinition.searchParam
  Card. = 0..*
  UML = 400;0
  Short Label = Additional Search params defined by this StructureDefinition
  Definition = Additional search parameters defined for this structure that implementations can support and/or make use of

 -- Row 36 -----------------------------------
  Element = !StructureDefinition.searchParam.name
  Card. = 1..1
  Inv. = 3
  Type = string
  Short Label = Name of search parameter
  Definition = The name of the standard or custom search parameter
  Requirements = Parameter names cannot overlap with standard parameter names, and standard parameters cannot be redefined

 -- Row 37 -----------------------------------
  Element = !StructureDefinition.searchParam.type
  Card. = 1..1
  Type = code
  Binding = SearchParamType
  Short Label = number | date | string | token | reference | composite | quantity
  Definition = The type of value a search parameter refers to, and how the content is interpreted

 -- Row 38 -----------------------------------
  Element = !StructureDefinition.searchParam.documentation
  Card. = 1..1
  Type = string
  Short Label = Contents and meaning of search parameter
  Definition = A specification for search parameters. For standard parameters, provides additional information on how the parameter is used in this solution.  For custom parameters, provides a description of what the parameter does

 -- Row 39 -----------------------------------
  Element = !StructureDefinition.searchParam.xpath
  Card. = 0..1
  Type = string
  Short Label = XPath that extracts the parameter set
  Definition = An XPath expression that returns a set of elements for the search parameter
  Requirements = Note that the elements are sometimes complex elements where logic is required to determine quite how to handle them. E.g. CodeableConcepts may contain text and/or multiple codings, where the codings themselves contain a code and a system
  Comments = The XPath expression may use parent references, but this technique should be avoided except in the special case of an extension making rules about its use with other extensions. Parent references SHALL not refer to content outside the resouce that contains the content

 -- Row 40 -----------------------------------
  Element = !StructureDefinition.searchParam.target
  Card. = 0..*
  Type = code
  Binding = ResourceType
  Short Label = Types of resource (if a resource reference)
  Definition = Types of resource (if a resource is referenced)

=== Sheet Search =====================================

 -- Row 1 -----------------------------------
  Name = url
  Type = uri
  Path = StructureDefinition.url

 -- Row 2 -----------------------------------
  Name = identifier
  Type = token
  Description = The identifier of the profile
  Path = StructureDefinition.identifier

 -- Row 3 -----------------------------------
  Name = version
  Type = token
  Description = The version identifier of the profile
  Path = StructureDefinition.version

 -- Row 4 -----------------------------------
  Name = name
  Type = string
  Description = Name of the profile
  Path = StructureDefinition.name

 -- Row 5 -----------------------------------
  Name = publisher
  Type = string
  Description = Name of the publisher of the profile
  Path = StructureDefinition.publisher

 -- Row 6 -----------------------------------
  Name = description
  Type = string
  Description = Text search in the description of the profile
  Path = StructureDefinition.description

 -- Row 7 -----------------------------------
  Name = status
  Type = token
  Description = The current status of the profile
  Path = StructureDefinition.status

 -- Row 8 -----------------------------------
  Name = date
  Type = date
  Description = The profile publication date
  Path = StructureDefinition.date

 -- Row 9 -----------------------------------
  Name = code
  Type = token
  Description = A code for the profile
  Path = StructureDefinition.code

 -- Row 10 -----------------------------------
  Name = valueset
  Type = reference
  Description = A vocabulary binding reference
  Path = StructureDefinition.snapshot.element.binding.valueSet[x]

 -- Row 11 -----------------------------------
  Name = type
  Type = token
  Path = StructureDefinition.constrainedType

 -- Row 12 -----------------------------------
  Name = kind
  Type = token
  Path = StructureDefinition.kind

 -- Row 13 -----------------------------------
  Name = path
  Type = token
  Description = A path that is constrained in the profile
  Path = StructureDefinition.snapshot.element.path | StructureDefinition.differential.element.path

 -- Row 14 -----------------------------------
  Name = context
  Type = token
  Description = A use context assigned to the structure
  Path = StructureDefinition.useContext

 -- Row 15 -----------------------------------
  Name = display
  Type = string
  Path = StructureDefinition.display

 -- Row 16 -----------------------------------
  Name = experimental
  Type = token
  Path = StructureDefinition.experimental

 -- Row 17 -----------------------------------
  Name = abstract
  Type = token
  Path = StructureDefinition.abstract

 -- Row 18 -----------------------------------
  Name = context-type
  Type = token
  Path = StructureDefinition.contextType

 -- Row 19 -----------------------------------
  Name = ext-context
  Type = string
  Path = StructureDefinition.context

 -- Row 20 -----------------------------------
  Name = base
  Type = uri
  Path = StructureDefinition.base

 -- Row 21 -----------------------------------
  Name = base-path
  Type = token
  Path = StructureDefinition.snapshot.element.base.path | StructureDefinition.differential.element.base.path

=== Sheet Profiles =====================================

 -- Row 1 -----------------------------------
  Name = StructureDefinition.extensions
  IG Name = core
  Filename = structuredefinition-extensions.xml
  Type = spreadsheet

=== Sheet Examples =====================================

=== Sheet Examples =====================================

 -- Row 1 -----------------------------------
  Name = questionnaire
  Use = Resource | Instance
  Documentation = Generates a [[[Questionnaire]]] instance  based on a specified [[[StructureDefinition]]], creating questions for each core element or extension element found in the StructureDefinition.    If the operation is not called at the instance level, one of the *identifier*, *profile* or *url* \'in\' parameters must be provided.  (If called at the instance level, these parameters will be ignored.  If more than one is specified, servers may raise an error or may resolve with the parameter of their choice.)  The response will contain a [[[Questionnaire]]] instance based on the specified [[[StructureDefinition]]] and/or an [[[OperationOutcome]]] resource with errors or warnings.  Nested groups are used to handle complex structures and data types.  If the \'supportedOnly\' parameter is set to true, only those elements marked as \"must support\" will be included.  This operation is intended to enable auto-generation of simple interfaces for arbitrary profiles.  The \'questionnaire\' approach to data entry has limitations that will make it less optimal than custom-defined interfaces.  However, this function may be useful for simple applications or for systems that wish to support \"non-core\" resources with minimal development effort.
  Type = operation
  Example.Request = $questionnaire-request.txt
  Example.Response = $questionnaire-response.txt
  Title = Build Questionnaire
  Footer = **Open Issue**: Ideally, extensions should be populated in the generated [[[Questionnaire]]] that will support taking [[[QuestionnaireResponse]]] resources generated from the Questionnaire and turning them back into the appropriate resources.

 -- Row 2 -----------------------------------
  Name = questionnaire.identifier
  Use = in
  Documentation = A logical profile identifier (i.e. \'StructureDefinition.identifier\'\'). The server must know the profile or be able to retrieve it from other known repositories.
  Type = uri
  Min = 0
  Max = 1

 -- Row 3 -----------------------------------
  Name = questionnaire.profile
  Use = in
  Documentation = The [[[StructureDefinition]]] is provided directly as part of the request. Servers may choose not to accept profiles in this fashion
  Type = token
  Min = 0
  Max = 1

 -- Row 4 -----------------------------------
  Name = questionnaire.url
  Use = in
  Documentation = The profile\'s official url (i.e. \'StructureDefinition.url\'). The server must know the profile or be able to retrieve it from other known repositories.
  Type = uri
  Min = 0
  Max = 1

 -- Row 5 -----------------------------------
  Name = questionnaire.supportedOnly
  Use = in
  Documentation = If true, the questionnaire will only include those elements marked as \"mustSupport=\'true\'\" in the StructureDefinition.
  Type = boolean
  Min = 0
  Max = 1

 -- Row 6 -----------------------------------
  Name = questionnaire.return
  Use = out
  Documentation = The questionnaire form generated based on the StructureDefinition.
  Type = Questionnaire
  Min = 1
  Max = 1
